openapi: 3.0.3
info:
  title: SUMAP API
  description: Smart Unified Mobility & Access Platform API
  version: 1.0.0
  contact:
    name: SUMAP Team
    url: https://sumap.app
    email: api@sumap.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.sumap.app/v1
    description: Production server
  - url: http://localhost:3000/v1  
    description: Development server

paths:
  /passes:
    post:
      summary: Create a new mobility pass
      description: Creates a new digital mobility pass and initiates payment flow
      tags:
        - Passes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pass_type
                - amount
              properties:
                pass_type:
                  type: string
                  enum: [SINGLE, DAILY, WEEKLY, MONTHLY, YEARLY]
                  description: Type of mobility pass
                amount:
                  type: number
                  format: decimal
                  description: Pass price in INR
                operator_id:
                  type: string
                  format: uuid
                  description: Transport operator ID
                metadata:
                  type: object
                  description: Additional pass metadata
      responses:
        '201':
          description: Pass created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pass'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '500':
          description: Server error

    get:
      summary: Get user's passes
      description: Retrieve all passes for the authenticated user
      tags:
        - Passes
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [ACTIVE, EXPIRED, SUSPENDED, CANCELLED]
          description: Filter passes by status
        - name: pass_type
          in: query
          schema:
            type: string
            enum: [SINGLE, DAILY, WEEKLY, MONTHLY, YEARLY]
          description: Filter passes by type
      responses:
        '200':
          description: List of user passes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pass'
                  count:
                    type: integer

  /passes/{passId}/qr:
    get:
      summary: Generate QR code for pass
      description: Returns signed QR payload with color token and QR code image
      tags:
        - Passes
      security:
        - bearerAuth: []
      parameters:
        - name: passId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Pass ID
      responses:
        '200':
          description: QR code generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  qr_payload:
                    type: string
                    description: Signed JWT payload for QR code
                  color_token:
                    type: string
                    description: Current dynamic color token
                  qr_image:
                    type: string
                    description: Base64 encoded QR code image
                  expires_at:
                    type: string
                    format: date-time
                    description: QR code expiration time
        '404':
          description: Pass not found
        '401':
          description: Unauthorized

  /validation/verify:
    post:
      summary: Verify pass QR code
      description: Validates QR payload and color token, processes pass usage
      tags:
        - Validation
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - qr_payload
                - color_token
                - device_id
              properties:
                qr_payload:
                  type: string
                  description: Signed QR code payload
                color_token:
                  type: string
                  description: Dynamic color token from user device
                device_id:
                  type: string
                  description: Validator device identifier
                lat:
                  type: number
                  format: double
                  description: Validator latitude
                lng:
                  type: number
                  format: double
                  description: Validator longitude
                validation_method:
                  type: string
                  enum: [ONLINE, OFFLINE]
                  default: ONLINE
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Validation success status
                  validation_result:
                    type: string
                    enum: [SUCCESS, EXPIRED, INVALID, SUSPENDED, INSUFFICIENT_BALANCE]
                  pass_info:
                    $ref: '#/components/schemas/PassInfo'
                  remaining_balance:
                    type: number
                    description: Remaining pass balance after validation
                  message:
                    type: string
                    description: Human readable result message

  /devices/{deviceId}/sync-offline-tokens:
    get:
      summary: Sync offline validation tokens
      description: Download pre-signed tokens for offline validation
      tags:
        - Offline Validation
      security:
        - apiKey: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: Validator device ID
        - name: hours
          in: query
          schema:
            type: integer
            default: 24
          description: Token validity window in hours
      responses:
        '200':
          description: Offline tokens bundle
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/OfflineToken'
                  expires_at:
                    type: string
                    format: date-time
                  device_id:
                    type: string

  /devices/{deviceId}/reconcile-offline:
    post:
      summary: Reconcile used offline tokens
      description: Upload validation events from offline device
      tags:
        - Offline Validation
      security:
        - apiKey: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                used_tokens:
                  type: array
                  items:
                    type: object
                    properties:
                      token_id:
                        type: string
                        format: uuid
                      pass_id:
                        type: string
                        format: uuid
                      timestamp:
                        type: string
                        format: date-time
                      lat:
                        type: number
                        format: double
                      lng:
                        type: number
                        format: double
      responses:
        '200':
          description: Reconciliation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  processed:
                    type: integer
                  errors:
                    type: array
                    items:
                      type: object

components:
  schemas:
    Pass:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        operator_id:
          type: string
          format: uuid
        pass_type:
          type: string
          enum: [SINGLE, DAILY, WEEKLY, MONTHLY, YEARLY]
        status:
          type: string
          enum: [ACTIVE, EXPIRED, SUSPENDED, CANCELLED]
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        balance:
          type: number
          format: decimal
        color_seed:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PassInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pass_type:
          type: string
        balance:
          type: number
        valid_until:
          type: string
          format: date-time
        operator:
          type: object
          properties:
            name:
              type: string

    OfflineToken:
      type: object
      properties:
        token_id:
          type: string
          format: uuid
        token_signature:
          type: string
        expires_at:
          type: string
          format: date-time
        pass_id:
          type: string
          format: uuid
        metadata:
          type: object

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: User authentication JWT token
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: Operator API key for validation endpoints

tags:
  - name: Passes
    description: Pass creation and management
  - name: Validation
    description: QR code validation endpoints
  - name: Offline Validation
    description: Offline validation token management
